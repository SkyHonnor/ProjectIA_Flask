from flask import Blueprint, render_template

from sklearn import datasets

scikit_page = Blueprint("scikit_page", __name__)


def generate_iris_table():
    iris = datasets.load_iris()
    return generate_table(iris)
    html = '<div class="p-4">\n'
    html += '<table class="table table-striped table-bordered table-hover">\n'
    html += '<tr><th>Sepal len </th><th>Sepal width </th><th>Petal len</th><th>Petal width </th><th>variety</th></tr>'

    for i in range(len(iris.data)):
        html += '<tr>'
        for x in iris.data[i]:
            html += f'<td>{x}</td>'
        html += f'<td>{iris.target_names[iris.target[i]]}</td>'
        html += '</tr>\n'

    html += '</table>'

    return html

@scikit_page.route('/iris')
def iris():
    iris_table = generate_iris_table()
    return render_template("scikit/index.html", iris_table=iris_table)

def generate_table(data):
    html = ""
    tmp = ""
    for entete in data.feature_names:
        tmp += generate_th(entete)
    tmp += generate_th("Class")
    html += generate_tr(tmp)

    tmp = ""
    for ligne in range(len(data.data)):
        for cellule in range(len(data.feature_names)):
            tmp += generate_td(data.data[ligne][cellule])

        tmp += generate_td(data.target_names[data.target[ligne]])
        html += generate_tr(tmp)
        tmp = ""

    return generate_t(html)

def generate_th(data):
    return f"<th>{data}</th>"

def generate_tr(data):
    return f"<tr>{data}</tr>"

def generate_td(data):
    return f"<td>{data}</td>"

def generate_t(data):
    return f"<table class='table table-striped table-bordered table-hover'>{data}</table>"